version: '3.8'

services:
  ai-detector-api:
    build: .
    container_name: ai-detector-api
    ports:
      - "8000:8000"
    volumes:
      - ./models:/app/models
      - ./data:/app/data
      - ./logs:/app/logs
      - ./cache:/app/cache
    environment:
      - PYTHONPATH=/app
      - CUDA_VISIBLE_DEVICES=0  # Set to empty string to disable GPU
    command: python api/main.py
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  ai-detector-ui:
    build: .
    container_name: ai-detector-ui
    ports:
      - "8501:8501"
    volumes:
      - ./models:/app/models
      - ./data:/app/data
      - ./logs:/app/logs
      - ./cache:/app/cache
    environment:
      - PYTHONPATH=/app
      - CUDA_VISIBLE_DEVICES=0  # Set to empty string to disable GPU
    command: streamlit run ui/app.py --server.port=8501 --server.address=0.0.0.0
    depends_on:
      - ai-detector-api
    restart: unless-stopped

  # Optional: Redis for caching (uncomment if needed)
  # redis:
  #   image: redis:alpine
  #   container_name: ai-detector-redis
  #   ports:
  #     - "6379:6379"
  #   restart: unless-stopped

volumes:
  models:
  data:
  logs:
  cache:

networks:
  default:
    name: ai-detector-network